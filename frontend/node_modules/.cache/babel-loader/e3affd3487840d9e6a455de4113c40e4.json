{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\web project(newton)\\\\E-commerce\\\\frontend\\\\src\\\\Screens\\\\ProductScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, Image, ListGroup, Button, ListGroupItem } from 'react-bootstrap';\nimport Rating from '../Components/Rating';\nimport axios from 'axios';\n\nconst ProductScreen = ({\n  match\n}) => {\n  _s();\n\n  const [product, setProduct] = useState([]);\n  useEffect(() => {\n    const fetchdata = async () => {\n      const {\n        data\n      } = await axios.get(`/api/products/${match.params.id}`);\n      setProduct(data);\n    };\n\n    fetchdata();\n  }, []); // const product=products.find(p=>p.id===match.params.id)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-light my-3\",\n      to: \"/\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: product.image,\n          alt: product.name,\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"value=\", product.rating, \"text=\", `${product.numReviews} reviews`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Price: $\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Description: \", product.des]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Price:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 35\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\"$\", product.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 39\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 35\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 35\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: product.countInstock > 0 ? 'In Stock' : 'Out Of stock'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 35\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-block\",\n                type: \"button\",\n                disabled: product.countInstock === 0,\n                children: \"Add to Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductScreen, \"swhvNGP7Ym2v37RN4B1nKrAzGPI=\");\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["E:/web project(newton)/E-commerce/frontend/src/Screens/ProductScreen.jsx"],"names":["React","useState","Link","Row","Col","Card","Image","ListGroup","Button","ListGroupItem","Rating","axios","ProductScreen","match","product","setProduct","useEffect","fetchdata","data","get","params","id","image","name","rating","numReviews","price","des","countInstock"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Row, Col, Card, Image, ListGroup, Button, ListGroupItem} from 'react-bootstrap'\r\nimport Rating from '../Components/Rating'\r\nimport axios from 'axios'\r\n\r\nconst ProductScreen = ({match}) => {\r\n\r\n    const [product,setProduct]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchdata=async()=>{\r\n            const {data}= await axios.get(`/api/products/${match.params.id}`)\r\n            setProduct(data)\r\n        }\r\n        fetchdata()\r\n    },[])\r\n\r\n    // const product=products.find(p=>p.id===match.params.id)\r\n    return (\r\n        <>\r\n          <Link className='btn btn-light my-3' to='/'>Go Back</Link>\r\n          <Row>\r\n              <Col md={6}>\r\n                  <Image src={product.image} alt={product.name} fluid/>\r\n              </Col>\r\n              <Col md={3}>\r\n                  <ListGroup variant='flush'>\r\n                      <ListGroup.Item>\r\n                          <h3>{product.name}</h3>\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                          value={product.rating}\r\n                          text={`${product.numReviews} reviews`}\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                          Price: ${product.price}\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                          Description: {product.des}\r\n                      </ListGroup.Item>\r\n                  </ListGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n                  <Card>\r\n                      <ListGroup variant='flush'>\r\n\r\n                          <ListGroup.Item>\r\n                              <Row>\r\n                                  <Col>Price:</Col>\r\n                                  <Col>\r\n                                      <strong>${product.price}</strong>\r\n                                  </Col>\r\n                              </Row>\r\n                          </ListGroup.Item>\r\n\r\n                          <ListGroup.Item>\r\n                              <Row>\r\n                                  <Col>Status:</Col>\r\n                                  <Col>\r\n                                      {product.countInstock>0?'In Stock':'Out Of stock'}\r\n                                  </Col>\r\n                              </Row>\r\n                          </ListGroup.Item>\r\n\r\n                          <ListGroup.Item>\r\n                              <Button className='btn-block' type='button' disabled={product.countInstock===0}>\r\n                                  Add to Cart\r\n                              </Button>\r\n                          </ListGroup.Item>\r\n\r\n                      </ListGroup>\r\n                  </Card>\r\n              </Col>\r\n          </Row> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n"]},"metadata":{},"sourceType":"module"}